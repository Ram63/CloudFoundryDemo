resources:
- name: S3_target
  type: s3
  source:
    endpoint: {{s3_endpoint}}
    bucket: releases
    regexp: release_history/cloud_foundry_demo-(.*)-(.*).tar.gz
    access_key_id: {{s3_key}}
    secret_access_key: {{s3_secret}}

- name: version
  type: semver
  source:
    uri: https://github.com/smichard/CloudFoundryDemo.git
    branch: version
    username: {{github_username}}
    password: {{github_password}}
    file: version
    driver: git
    initial_version: 0.6.0

- name: app_sources_production
  type: git
  source:
    uri: https://github.com/smichard/CloudFoundryDemo.git
    branch: dev
    username: {{github_username}}
    password: {{github_password}}
  check_every: 30s

jobs:
  - name: ecs-backup
    public: true
    serial: true
    plan:
    - get: version
      trigger: false
    - get: app_sources_production
      trigger: false
    - task: create-artifact
      file: app_sources_production/ci/tasks/create_artifact.yml
    - put: S3_target
      params: # {file: app_sources_release/CloudFoundryDemo-(.*).tar.gz}
        file: ./artifact/cloud_foundry_demo-*-*.tar.gz
        acl: public-read



# to do:
# zunächst als eigene pipeline
# code commiten
# unnötige files löschen
